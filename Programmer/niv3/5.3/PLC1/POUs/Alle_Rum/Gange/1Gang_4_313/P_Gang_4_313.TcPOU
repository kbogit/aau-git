<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_Gang_4_313" Id="{8874c306-f713-4437-a8db-cb25cc310e02}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Gang_4_313
VAR
(*Gangen består af to lysgrupper - 3 og 5 - på to forskellige DALI-linjer - 3 og 1 henh..
Begge grupper afhænger af samme PIR-signaler - pir-adr 1 - på DALI-linje 2.
Derfor oprettes to adskilte reguleringer med samme PV. Dvs., at knapfunktion og pirfunktion forbliver den samme.*)

	arrfbLysGruppe			: ARRAY [1..2] OF FB_Light_Type_B;
	arrstDaliSetupGruppe	: ARRAY[1..2] OF SH_Light.ST_DALI_RoomSetup := 
	
													[(	byShrtAdr_Prim := 21, 
														byGrpAdr_Prim := 3, 
														eMod_Prim := E_DALIAddressType.Group, 
														byShrtAdr_Sec := 1, 
														byGrpAdr_Sec := 1, 
														eMod_Sec := E_DALIAddressType.Short, 
														byShrtAdr_Supl := 43, 
														DALI_LINE_NUM_PRIM := arrDALI_LINE_NUM_LIGHT[1], 
														DALI_LINE_NUM_SEC := 0, 
														DALI_LINE_NUM_SUPL := DALI_LINE_NUM_PENDANTS),
														
													(	byShrtAdr_Prim := 24, 
														byGrpAdr_Prim := 5, 
														eMod_Prim := E_DALIAddressType.Group, 
														byShrtAdr_Sec := 1, 
														byGrpAdr_Sec := 1, 
														eMod_Sec := E_DALIAddressType.Short, 
														byShrtAdr_Supl := 1, 
														DALI_LINE_NUM_PRIM := arrDALI_LINE_NUM_LIGHT[2], 
														DALI_LINE_NUM_SEC := 0, 
														DALI_LINE_NUM_SUPL := 0)];
														
	arrstLiveDataGruppe		: ARRAY [1..2] OF SH_Light.ST_LiveData;
	//stLiveData AT %MB22	: SH_Light.ST_LiveData;
	
	arrRunTuningGruppe: ARRAY[1..2] OF BOOL;
	
	
	
	bButtonZone1			: BOOL;
	bButtonZone1_Visu		: BOOL;
	bBottomButtonZone1		: BOOL;
	bBottomButtonZone1_Visu	: BOOL;
	bButtonZone2			: BOOL;
	bNeighborRoomsPir		: BOOL;
	fLuxOn					: REAL := 500;
	fLuxDim					: REAL := 200;
	tPIRDim					: TIME := T#15M;
	tPIROff					: TIME := T#30M;
	fOffsetSec				: REAL := 20;



// Sensor Settings
	fbSensor					: SH_Light.FB_NIKO_P46xx_1Pcs;
	//fbSensor					: SH_Light.FB_NIKO_P46xx_5Pcs;
	bySensorAddr				: BYTE := 1;
	//arrSensorAddr				: ARRAY[1..5] OF BYTE := [6,7,8,9,10];
	bInitialize					: BOOL := TRUE;
	stDaliSensorSetup			: ST_DALI_NIKOP46SetupData;
	bInitErr					: BOOL;
	bInitDone					: BOOL;
	//arrInitErr				: ARRAY [1..5] OF BOOL;
	//arrInitDone				: ARRAY [1..5] OF BOOL;
	arrSensorScales				: ARRAY [1..10] OF SH_Light.ST_DALI_SensorScaleMode := [	(fMeassureMaxSensor := 1023, fReadMaxSensor := 1023),																							
																						9(())];
	bCancelHoldTimerOccupancy	: BOOL;
(*	eEventPriorityOccupancy		: E_DALIEventPriority := E_DALIEVENTPRIORITY.Middle;
	nHoldTimerOccupancy			: WORD := 5; // Value in s. 	
	nReportTimerOccupancy		: BYTE := 120; // Value in s, Preset manufacturer value
	nDeadtimeTimerOccupancy		: WORD := 100; // Value in ms, Predefined Value of DALI Standard
	bCancelHoldTimerOccupancy	: BOOL;
	nSensitivityOccupancy		: BYTE:= 3; //setting Sensivity (0..4) 0 (Off), 1 (Min), 2(Low), 3(High) and 4 (Max)

	bEnableLuxEvent				: BOOL;
	eEventPriorityBrightness	: E_DALIEventPriority := E_DALIEVENTPRIORITY.Middle;
	nDeadtimeTimerBrightness	: WORD := 1500; // Value in ms, Predefined Value of DALI Standard
	nHysteresisBrightness		: BYTE := 2; // Value in %
	nHysteresisMinBrightness	: BYTE := 10; // Absolute Value, depending on the manufacturer specific resolution
	nReportTimerBrightness		: BYTE := 120; // Value in s, Preset manufacturer value
*)


END_VAR

VAR CONSTANT
	Sensor_DALI_LINE_NUM	: BYTE := 2;
	arrDALI_LINE_NUM_LIGHT	: ARRAY[1..2] OF BYTE := [3,1]; //correct order necessary
	DALI_LINE_NUM_PENDANTS	: BYTE := 3;
END_VAR
VAR PERSISTENT
	stPirSensorData: SH_Light.ST_DALI_Sensor;
	arrstTuneDataGruppe: ARRAY [1..2] OF SH_Light.ST_TuneData_EX;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Buttons();
A_LightCtrl();
A_Sensor();
]]></ST>
    </Implementation>
    <Action Name="A_Buttons" Id="{905b5ec8-9f33-48f8-8135-33780b608c67}">
      <Implementation>
        <ST><![CDATA[bButtonZone1		:= GVL_EnOcean.strEnOceanSwitch_Gang_4_313_Indgang.bT2_ON OR bButtonZone1_Visu;
bBottomButtonZone1	:= GVL_EnOcean.strEnOceanSwitch_Gang_4_313_Indgang.bT2_OFF OR bBottomButtonZone1_Visu;

bButtonZone2		:= GVL_EnOcean.strEnOceanSwitch_Gang_4_313_Pendler.bT2_ON OR GVL_EnOcean.strEnOceanSwitch_Gang_4_313_Pendler.bT2_OFF;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_LightCtrl" Id="{9643fa39-638b-4781-a55e-192d05a01ac8}">
      <Implementation>
        <ST><![CDATA[bNeighborRoomsPir	:= 0; (*P_Gang_1_312A.stPirSensorData.bPrc OR
						P_Gang_1_315.stPirSensorData.bPrc OR
						P_Rum_1_317.stPirSensorData.bPrc OR
						P_Rum_1_318.stPirSensorData.bPrc OR
						P_Rum_1_319.stPirSensorData.bPrc OR
						P_Rum_1_320.stPirSensorData.bPrc OR
						P_Rum_1_321.stPirSensorData.bPrc OR
						P_Rum_1_322.stPirSensorData.bPrc OR
						P_Rum_1_323.stPirSensorData.bPrc OR
						P_Rum_1_324.stPirSensorData.bPrc OR
						P_Rum_1_326.stPirSensorData.bPrc;*)

//gruppe 3
arrfbLysGruppe[1]( 
	nZoneID:= 1, 
	bButtonZone1:= bButtonZone1,
	bBottomButtonZone1 := bBottomButtonZone1, 
	bButtonZone2:= bButtonZone2,
	bNeighborRoomsPir	:=	bNeighborRoomsPir,
	fLuxOn:= fLuxOn, 
	fLuxDim:= fLuxDim, 
	tPIRDim:= tPIRDim, 
	tPIROff:= tPIROff, 
	fOffsetSec:= fOffsetSec, 
	bReInit:= , 
	stDaliSetup:= arrstDaliSetupGruppe[1], 
	ipCommunication_Prim:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[1]], 
	ipCommunication_Sec:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[1]], 
	ipCommunication_Supl:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[1]], 
	fMinOutputPowerLevelRoom:= 15, 
	fMaxOutputPowerLevelRoom:= 100, 
	nCycleTimeInMS:= 10 , 
	bRunTuning:= arrRunTuningGruppe[1], 
	bOccupiedRoom=> , 
	bError_Prim=> , 
	nError_Prim=> , 
	stTuneData:=arrstTuneDataGruppe[1] , 
	stPirSensorData:= stPirSensorData, 					//samme sensordata
	stLiveData:= arrstLiveDataGruppe[1]);

//gruppe 5	
arrfbLysGruppe[2]( 
	nZoneID:= 1, 
	bButtonZone1:= bButtonZone1,
	bBottomButtonZone1 := bBottomButtonZone1, 
	bButtonZone2:= ,
	bNeighborRoomsPir	:=	bNeighborRoomsPir,
	fLuxOn:= fLuxOn, 
	fLuxDim:= fLuxDim, 
	tPIRDim:= tPIRDim, 
	tPIROff:= tPIROff, 
	fOffsetSec:= fOffsetSec, 
	bReInit:= , 
	stDaliSetup:= arrstDaliSetupGruppe[2], 
	ipCommunication_Prim:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[2]], 
	ipCommunication_Sec:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[2]], 
	ipCommunication_Supl:= P_DALI_Background.arrfbKL6821Communication[arrDALI_LINE_NUM_LIGHT[2]], 
	fMinOutputPowerLevelRoom:= 15, 
	fMaxOutputPowerLevelRoom:= 100, 
	nCycleTimeInMS:= 10 , 
	bRunTuning:= arrRunTuningGruppe[2], 
	bOccupiedRoom=> , 
	bError_Prim=> , 
	nError_Prim=> , 
	stTuneData:=arrstTuneDataGruppe[2] , 
	stPirSensorData:= stPirSensorData, 					//samme sensordata
	stLiveData:= arrstLiveDataGruppe[2]);	]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_Sensor" Id="{de7f3a72-a8be-449d-b520-abdd67db0879}">
      <Implementation>
        <ST><![CDATA[
fbSensor.ipCommunication := P_DALI_Background.arrfbKL6821Communication[Sensor_DALI_LINE_NUM];

//only 1 sensor
fbSensor(
	byShrtAdr:= bySensorAddr,
	bInitialize:= bInitialize, 
	DALI_LINE_NUM:= Sensor_DALI_LINE_NUM, 
 	//bCancelHoldTimerOccupancy:= bCancelHoldTimerOccupancy, 
	stSensorSetup := stDaliSensorSetup,
	bInitErr=> bInitErr, 
	bInitDone=> bInitDone,
	stPirSensorData:= stPirSensorData, 
	arrSensorScales:= arrSensorScales);


(*//several sensors	
fbSensor(
	arrShrtAdr:= arrSensorAddr,
	bInitialize:= bInitialize, 
	DALI_LINE_NUM:= Sensor_DALI_LINE_NUM, 
 	//bCancelHoldTimerOccupancy:= bCancelHoldTimerOccupancy, 
	stSensorSetup := stDaliSensorSetup,
	arrInitErr=> arrInitErr, 
	arrInitDone=> arrInitDone,
	stPirSensorData:= stPirSensorData, 
	arrSensorScales:= arrSensorScales);
	*)]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>