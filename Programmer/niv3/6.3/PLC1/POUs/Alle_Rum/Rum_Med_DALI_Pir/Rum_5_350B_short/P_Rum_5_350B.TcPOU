<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_Rum_5_350B" Id="{0997b818-dff7-4a82-af9e-dd65200d77f3}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Rum_5_350B
VAR
//Light

	fbLys		: FB_Light_Type_A;
	
	stDaliSetup	: SH_Light.ST_DALI_RoomSetup := (		byShrtAdr_Prim := 18, 
														byGrpAdr_Prim := 0, 
														eMod_Prim := E_DALIAddressType.Short, 
														byShrtAdr_Sec := 0, 
														byGrpAdr_Sec := 0, 
														eMod_Sec := E_DALIAddressType.group, 
														byShrtAdr_Supl := 1, 
														DALI_LINE_NUM_PRIM := DALI_LINE_NUM_LIGHT, 
														DALI_LINE_NUM_SEC := 0, //0 = ingen zonestyring/vinduerække
														DALI_LINE_NUM_SUPL := DALI_LINE_NUM_PENDANTS);
	stLiveData				: SH_Light.ST_LiveData;
	//stLiveData AT %MB22	: SH_Light.ST_LiveData;
	bTopButtonZone1			: BOOL;
	bTopButtonZone1_Visu	: BOOL;
	bBottomButtonZone1		: BOOL;
	bBottomButtonZone1_Visu	: BOOL;
	bButtonZone2			: BOOL;
	fLuxOn					: REAL := 500;
	fLuxDim					: REAL := 200;
	tPIRDim					: TIME := T#15M;
	tPIROff					: TIME := T#30M;
	fOffsetSec				: REAL := 20;
	bOccupiedRoom			: BOOL;

	bRunTuning				: BOOL;
	
// Sensor Settings
	fbSensor					: SH_Light.FB_NIKO_P46xx_1Pcs;
	//fbSensor					: SH_Light.FB_NIKO_P46xx_2Pcs;
	bySensorAddr				: BYTE := 2;
	//arrSensorAddr				: ARRAY[1..2] OF BYTE := [9,10];
	bInitialize					: BOOL := TRUE;
	stDaliSensorSetup			: ST_DALI_NIKOP46SetupData;
	bInitErr					: BOOL;
	bInitDone					: BOOL;
	//arrInitErr					: ARRAY [1..2] OF BOOL;
	//arrInitDone					: ARRAY [1..2] OF BOOL;
	arrSensorScales				: ARRAY [1..10] OF SH_Light.ST_DALI_SensorScaleMode := [	(fMeassureMaxSensor := 1023, fReadMaxSensor := 1023),
																						9(())];
	bCancelHoldTimerOccupancy	: BOOL;
(*	eEventPriorityOccupancy		: E_DALIEventPriority := E_DALIEVENTPRIORITY.Middle;
	nHoldTimerOccupancy			: WORD := 5; // Value in s. 	
	nReportTimerOccupancy		: BYTE := 120; // Value in s, Preset manufacturer value
	nDeadtimeTimerOccupancy		: WORD := 100; // Value in ms, Predefined Value of DALI Standard
	bCancelHoldTimerOccupancy	: BOOL;
	nSensitivityOccupancy		: BYTE:= 3; //setting Sensivity (0..4) 0 (Off), 1 (Min), 2(Low), 3(High) and 4 (Max)

	bEnableLuxEvent				: BOOL;
	eEventPriorityBrightness	: E_DALIEventPriority := E_DALIEVENTPRIORITY.Middle;
	nDeadtimeTimerBrightness	: WORD := 1500; // Value in ms, Predefined Value of DALI Standard
	nHysteresisBrightness		: BYTE := 2; // Value in %
	nHysteresisMinBrightness	: BYTE := 10; // Absolute Value, depending on the manufacturer specific resolution
	nReportTimerBrightness		: BYTE := 120; // Value in s, Preset manufacturer value
*)

END_VAR

VAR CONSTANT
	Sensor_DALI_LINE_NUM	: BYTE := 1;
	DALI_LINE_NUM_LIGHT		: BYTE := 1;
	DALI_LINE_NUM_PENDANTS	: BYTE := 0; //0=ingen pendler
END_VAR
VAR PERSISTENT
	stPirSensorData: SH_Light.ST_DALI_Sensor;
	stTuneData: SH_Light.ST_TuneData_EX;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[A_Buttons();
A_LightCtrl();
A_Sensor();
]]></ST>
    </Implementation>
    <Action Name="A_Buttons" Id="{c1d10133-7754-4410-8a68-42203ff4fa19}">
      <Implementation>
        <ST><![CDATA[//bTopButtonZone1		:= GVL_EnOcean.strEnOceanSwitch_Rum_5_350B.bT2_ON OR bTopButtonZone1_Visu;
//bBottomButtonZone1	:= GVL_EnOcean.strEnOceanSwitch_Rum_5_350B.bT2_OFF OR bBottomButtonZone1_Visu;
]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_LightCtrl" Id="{99532b6b-548b-42ec-afbb-d1686e0bbaed}">
      <Implementation>
        <ST><![CDATA[
fbLys(
	nZoneID:= 1, 
	bButtonZone1:= bTopButtonZone1,
	bBottomButtonZone1 := bBottomButtonZone1, 
	bButtonZone2:= bButtonZone2, 
	fLuxOn:= fLuxOn, 
	fLuxDim:= fLuxDim, 
	tPIRDim:= tPIRDim, 
	tPIROff:= tPIROff, 
	fOffsetSec:= fOffsetSec, 
	bReInit:= , 
	stDaliSetup:= stDaliSetup, 
	ipCommunication_Prim:= P_DALI_Background.arrfbKL6821Communication[DALI_LINE_NUM_LIGHT], 
	ipCommunication_Sec:= P_DALI_Background.arrfbKL6821Communication[DALI_LINE_NUM_LIGHT], 
	ipCommunication_Supl:= P_DALI_Background.arrfbKL6821Communication[DALI_LINE_NUM_LIGHT], 
	fMinOutputPowerLevelRoom:= 15, 
	fMaxOutputPowerLevelRoom:= 100, 
	nCycleTimeInMS:= 10 , 
	bRunTuning:= bRunTuning, 
	bOccupiedRoom=> bOccupiedRoom, 
	bError_Prim=> , 
	nError_Prim=> , 
	stTuneData:=stTuneData , 
	stPirSensorData:= stPirSensorData, 
	stLiveData:= stLiveData);
	]]></ST>
      </Implementation>
    </Action>
    <Action Name="A_Sensor" Id="{1a00f6ef-5ab6-42ea-8f4e-2205cf4a577c}">
      <Implementation>
        <ST><![CDATA[
fbSensor.ipCommunication := P_DALI_Background.arrfbKL6821Communication[Sensor_DALI_LINE_NUM];


fbSensor(
	byShrtAdr:= bySensorAddr,
	bInitialize:= bInitialize, 
	DALI_LINE_NUM:= Sensor_DALI_LINE_NUM, 
 	//bCancelHoldTimerOccupancy:= bCancelHoldTimerOccupancy, 
	stSensorSetup := stDaliSensorSetup,
	bInitErr=> bInitErr, 
	bInitDone=> bInitDone,
	stPirSensorData:= stPirSensorData, 
	arrSensorScales:= arrSensorScales);

(*
fbSensor(
	arrShrtAdr:= arrSensorAddr,
	bInitialize:= bInitialize, 
	DALI_LINE_NUM:= Sensor_DALI_LINE_NUM, 
 	//bCancelHoldTimerOccupancy:= bCancelHoldTimerOccupancy, 
	stSensorSetup := stDaliSensorSetup,
	arrInitErr=> arrInitErr, 
	arrInitDone=> arrInitDone,
	stPirSensorData:= stPirSensorData, 
	arrSensorScales:= arrSensorScales);
	*)
	]]></ST>
      </Implementation>
    </Action>
  </POU>
</TcPlcObject>